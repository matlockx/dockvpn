- hosts: localhost
  connection: local
  gather_facts: false
  vars:
    zones:
      uk: europe-west2-a
      de: europe-west3-a
      us: us-central1-b
    location: uk
    zone: "{{ zones[location] }}"
    instance_name: "openvpn-{{ location }}"
    machine_type: n1-standard-1
    image: centos-7
    credentials_file: "{{ playbook_dir }}/credentials.json"
    mail_server: smtp.gmail.com
    mail_port: 465
    config_file: "{{ openvpn_config_file_path }}/{{ location }}.ovpn"
    #config_file: "{{ openvpn_config_file_path }}/myopen.ovpn"

  pre_tasks:
    - name: Load vars from secrets file if it exists
      include_vars: "{{ item }}"
      tags: [mail,pre]
      with_first_found:
        - secrets.yaml
        - secrets_example.yaml
    - name: Precondition check
      fail: msg="Pass the parameter '{{ item }}'"
      when: hostvars[inventory_hostname].get(item, "") | trim == ""
      with_items:
        - project_id
        - service_account_email
        - gcloud_credentials_json

    - name: Create local gcloud credentials file
      tags: pre
      copy: content="{{ gcloud_credentials_json }}" dest="{{ credentials_file }}" force=true

  tasks:
    - name: Set facts globally
      set_fact:
        "{{ item.name }}": "{{ item.value }}"
      tags: [mail]
      with_items:
        - name: mail_server
          value: "{{ mail_server }}"
        - name: mail_port
          value: "{{ mail_port }}"
        - name: mail_user
          value: "{{ mail_user }}"
        - name: mail_password
          value: "{{ mail_password }}"
        - name: mail_address
          value: "{{ mail_address }}"
        - name: project_id
          value: "{{ project_id }}"
        - name: config_file
          value: "{{ config_file }}"
        - name: service_account_email
          value: "{{ service_account_email }}"
        - name: credentials_file
          value: "{{ credentials_file }}"
    - include: gce.yaml state=absent
      static: yes
      tags: delete
      when: new_machine | default(false) | bool
    # unfortuntely state started does not return instance_data so we must run it with state present again
    - include: gce.yaml state=started
      static: yes
      when: new_machine | default(false) | bool
    - include: gce.yaml state=present
      static: yes

    - name: Add host to group
      add_host: hostname={{ item.public_ip }} groupname=new_instances
      tags: vpn-server
      with_items: "{{ gce.instance_data }}"

    - name: Create firewall rule
      gce_net:
        fwname: "all-openvpn"
        name: "default"
        allowed: "tcp:443;tcp:8080;udp:1194"
        state: "present"
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        target_tags:
          - openvpn

    - name: Wait for SSH for instances
      wait_for:
        delay: 1
        host: "{{ item.public_ip }}"
        port: 22
        state: started
        timeout: 60
      with_items: "{{ gce.instance_data }}"


- name: Install and update needed packages
  hosts: new_instances
  tags: docker
  pre_tasks:
    - name: upgrade all packages
      become: true
      yum:
        name: '*'
        state: latest
  roles:
    - docker-install

- name: Install vpn server
  hosts: new_instances
  gather_facts: false
  tags: vpn-server
  tasks:
    - name: Pull container
      become: true
      command: docker pull matlockx/openvpn

    - name: Kill server when running
      ignore_errors: true
      become: true
      command: docker rm -fv vpn-server

    - name: Run vpn server
      become: true
      command: |
        docker run --name vpn-server -d --cap-add=NET_ADMIN
        -p 1194:1194/udp
        -p 443:443/tcp
        --log-driver=gcplogs
        --log-opt gcp-log-cmd=true
        --restart unless-stopped
        matlockx/openvpn

    - name: Kill config
      ignore_errors: true
      become: true
      command: docker rm -fv serveconfig

    - name: Serve config
      become: true
      command: |
        docker run -d -p 8080:8080 --name serveconfig --volumes-from vpn-server
        matlockx/openvpn serveconfig

    - name: Wait for port 8080
      wait_for:
        delay: 1
        host: "{{ inventory_hostname }}"
        port: 8080
        state: started
        timeout: 30

    - name: Get config
      get_url:
        url: "https://{{ inventory_hostname }}:8080"
        dest: "{{ playbook_dir }}/myopen.ovpn"
        validate_certs: false
        force: true
      delegate_to: localhost

    - name: Kill config serving
      become: true
      command: docker rm -fv serveconfig


- name: Clean up and copy and send config file
  hosts: localhost
  connection: local
  tasks:
    - name: Copy config file
      copy:
        src: "{{ playbook_dir}}/myopen.ovpn"
        dest: "{{ config_file }}"
      when: config_file and not config_file | trim == ""

    - name: Sending email
      mail:
        host: "{{ mail_server }}"
        port: "{{ mail_port }}"
        secure: always
        username: "{{ mail_user }}"
        password: "{{ mail_password }}"
        from: "{{ mail_address }}"
        to: "{{ mail_address }}"
        subject: openvpn
        attach: "{{ config_file }}"
      tags: mail

    - name: Update firewal rule
      gce_net:
        fwname: "all-openvpn"
        name: "default"
        allowed: "tcp:443;udp:1194"
        state: "present"
        service_account_email: "{{ service_account_email }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        target_tags:
          - openvpn

    - name: Remove gcloud credentials locally
      file: name="{{ credentials_file }}" state=absent
